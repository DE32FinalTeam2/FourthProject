### 그라파나 사용법 

localhost:3000  접속

### 로그인
id:admin
pw:admin

### 대시보드 만들기 
#### datasource 설정

- connection
prometheus url: http://prometheus:9090 

#### dashboard 생성

import - 10313 입력 - import - prometheus 선택 - import

#### metrics 받아서 대쉬보드 구성하기 (edit 기능)

설정할만한 쿼리목록 

[Queries]
1. CPU 사용량 (Usage)
100 - (avg by(instance) (rate(node_cpu_seconds_total{mode="idle"}[1m])) * 100)
이 쿼리는 node_cpu_seconds_total 메트릭을 사용하여 CPU 사용률을 보여줍니다. mode="idle" 필터를 적용해 유휴 상태를 제외하고, 100에서 유휴 비율을 빼 CPU 사용률을 계산합니다.

2. 메모리 사용량 (Memory Usage)
(node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes * 100
총 메모리(node_memory_MemTotal_bytes)에서 사용 가능한 메모리(node_memory_MemAvailable_bytes)를 뺀 값을 기준으로 메모리 사용률을 계산합니다.

3. 메모리 사용량 (Used Memory in Bytes)
node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes
이 쿼리는 사용된 메모리의 총 바이트 수를 보여줍니다.

4. 디스크 사용률 (Disk Usage)
(node_filesystem_size_bytes{fstype!="tmpfs"} - node_filesystem_free_bytes{fstype!="tmpfs"}) / node_filesystem_size_bytes{fstype!="tmpfs"} * 100
이 쿼리는 tmpfs 파일 시스템을 제외하고 디스크의 사용률을 계산합니다.

5. 디스크 읽기/쓰기 속도 (Disk Read/Write Rate)
디스크 읽기 속도:

rate(node_disk_read_bytes_total[1m])
디스크 쓰기 속도:

rate(node_disk_written_bytes_total[1m])
각각 초당 디스크 읽기 및 쓰기 바이트 수를 보여줍니다.

6. 네트워크 수신/송신 속도 (Network In/Out)
네트워크 수신 속도:

rate(node_network_receive_bytes_total[1m])
네트워크 송신 속도:

rate(node_network_transmit_bytes_total[1m])
각각 초당 네트워크 수신 및 송신 바이트 수를 나타냅니다.

7. 로드 평균 (Load Average)
1분 로드 평균:

node_load1
5분 로드 평균:

node_load5
15분 로드 평균:

node_load15
시스템의 1분, 5분, 15분 로드 평균 값을 보여줍니다.

8. 파일 디스크립터 사용량 (File Descriptor Usage)
(node_filefd_allocated - node_filefd_free) / node_filefd_allocated * 100
총 파일 디스크립터 수(node_filefd_allocated)에서 사용 가능한 디스크립터 수(node_filefd_free)를 빼서 파일 디스크립터 사용률을 계산합니다.

9. JVM 힙 메모리 사용량 (JVM Heap Memory Usage)
jvm_memory_used_bytes{area="heap"} / jvm_memory_max_bytes{area="heap"} * 100
JVM의 힙 메모리 사용률을 계산합니다. jvm_memory_used_bytes와 jvm_memory_max_bytes를 사용하여 사용된 메모리의 비율을 계산합니다.

10. Garbage Collection 시간 (Garbage Collection Time)
rate(jvm_gc_pause_seconds_sum[1m])
이 쿼리는 최근 1분 동안의 가비지 컬렉션 시간의 합을 보여줍니다. 이 값이 높아지면 GC로 인해 성능에 영향을 미칠 수 있습니다.
   


